/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 office_worker.glb --transform 
Files: office_worker.glb [47.05MB] > E:\assignment\React Project\Portolio Project\rajnish_portfolio\public\models\office_worker-transformed.glb [1.61MB] (97%)
*/

import React, { useEffect } from "react";
import { useGraph } from "@react-three/fiber";
import {
  useGLTF,
  useAnimations,
  PerspectiveCamera,
  OrbitControls,
} from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";

export function OfficeWorker(props) {
  const group = React.useRef();
  const { scene, animations } = useGLTF(
    "/models/office_worker-transformed.glb"
  );
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    if (actions) {
      Object.values(actions).forEach((action) => {
        action.reset().play();
      });
    }
  }, [actions]);
  return (
    <>
      <PerspectiveCamera makeDefault position={[18, 0, 4]} fov={30}>
        {/* OrbitControls to enable zoom and pan */}
        <OrbitControls minDistance={25} maxDistance={50} />
      </PerspectiveCamera>
      <group
        ref={group}
        {...props}
        dispose={null}
        scale={[3.5, 3.5, 3.5]}
        rotation={[0, Math.PI, 0]}
      >
        <group name="Sketchfab_Scene">
          <group name="GLTF_created_0">
            <primitive object={nodes.Hips_85} />
          </group>
          <mesh
            name="Object_4"
            geometry={nodes.Object_4.geometry}
            material={materials.CHAIR}
            position={[-0.195, 0.022, 0.088]}
          />
          <mesh
            name="Object_6"
            geometry={nodes.Object_6.geometry}
            material={materials.Wood}
            scale={1.5}
          />
          <mesh
            name="Object_8"
            geometry={nodes.Object_8.geometry}
            material={materials.STEEL}
            position={[-0.152, 0, 0.72]}
          />
          <skinnedMesh
            name="Object_14"
            geometry={nodes.Object_14.geometry}
            material={materials.body}
            skeleton={nodes.Object_14.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_16"
            geometry={nodes.Object_16.geometry}
            material={materials.bottom}
            skeleton={nodes.Object_16.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_18"
            geometry={nodes.Object_18.geometry}
            material={materials.eyes}
            skeleton={nodes.Object_18.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_20"
            geometry={nodes.Object_20.geometry}
            material={materials.eyes}
            skeleton={nodes.Object_20.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_22"
            geometry={nodes.Object_22.geometry}
            material={materials.hair}
            skeleton={nodes.Object_22.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_28"
            geometry={nodes.Object_28.geometry}
            material={materials.Wolf3D_Teeth}
            skeleton={nodes.Object_28.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_26"
            geometry={nodes.Object_26.geometry}
            material={materials.shoes}
            skeleton={nodes.Object_26.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_30"
            geometry={nodes.Object_30.geometry}
            material={materials.material}
            skeleton={nodes.Object_30.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="Object_24"
            geometry={nodes.Object_24.geometry}
            material={materials.head}
            skeleton={nodes.Object_24.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
        </group>
      </group>
    </>
  );
}

useGLTF.preload("/models/office_worker-transformed.glb");
